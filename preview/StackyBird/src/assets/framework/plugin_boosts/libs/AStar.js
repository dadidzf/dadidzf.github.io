let Grid=cc.Class({ctor(){this.x=0,this.y=0,this.f=0,this.g=0,this.h=0,this.parent=null,this.type=0,this.tt=0}});const typeColors={[-1]:cc.Color.GRAY,0:cc.Color.WHITE};cc.AStar=cc.Class({properties:{graphics:cc.Graphics,is8dir:Boolean},ctor(t,i,s){this._gridW=i.width||50,this._gridH=i.height||50,this.mapH=t.width||20,this.mapW=t.height||20,this.is8dir=!1,this.graphics=s,this.initMap()},initMap(){this.gridsList=new Array(this.mapW);for(let t=0;t<this.gridsList.length;t++)this.gridsList[t]=new Array(this.mapH);this.graphics.clear();for(let t=0;t<this.mapW;t++)for(let i=0;i<this.mapH;i++)this.addGrid(t,i,0)},resetMap(){},getPositionAt(t,i){return i=i||cc.Vec2.ZERO,cc.v2(this._gridW*(t.x+i.x),this._gridH*(t.y+i.y))},drawDebug(){this.graphics.clear();for(let t=0;t<this.mapW;t++)for(let i=0;i<this.mapH;i++){let s=this.gridsList[t][i];s&&this.draw(t,i,typeColors[s.type])}},setGrid(t,i,s){t>=0&&i>=0&&t<this.mapW&&i<this.mapH&&(this.gridsList[t][i].type=s)},_setGridT(t,i,s){t>=0&&i>=0&&t<this.mapW&&i<this.mapH&&(this.gridsList[t][i].tt=s)},addGrid(t,i,s){let r=new Grid;r.x=t,r.y=i,r.type=s,this.gridsList[t][i]=r},_sortFunc:(t,i)=>t.f-i.f,generatePath(t){let i=[];for(i.push(t);t.parent;)t=t.parent,i.push(t);cc.log("path.length: "+i.length),this.graphics.clear();for(let s=0;s<i.length;s++){let t=i[s];this.draw(t.x,t.y,cc.Color.GREEN)}return i},findPath(t,i){let s=this.gridsList[t.x][t.y];this.gridsList[i.x][i.y];for(let a=0;a<this.mapW;a++)for(let t=0;t<this.mapH;t++){let i=this.gridsList[a][t];i.parent=null,i.f=0,i.g=0,i.h=0,i.tt=0}this._setGridT(t.x,t.y,cc.AStar.Types.Start),this._setGridT(i.x,i.y,cc.AStar.Types.Target);let r=[],h=[];r.push(s);let e=r[0];for(;r.length>0&&e.tt!=cc.AStar.Types.Target;){if((e=r[0]).tt==cc.AStar.Types.Target)return cc.log("find path success."),this.generatePath(e);for(let t=-1;t<=1;t++)for(let s=-1;s<=1;s++)if(0!=t||0!=s){let a=e.x+t,c=e.y+s;if(a>=0&&c>=0&&a<this.mapW&&c<this.mapH){let l=this.gridsList[a][c];if(-1!=l.type&&h.indexOf(l)<0){if(this.is8dir){if(-1==this.gridsList[a-t][c].type||-1==this.gridsList[a][c-s].type)continue}else if(Math.abs(t)==Math.abs(s))continue;let h=e.g+parseInt(Math.sqrt(Math.pow(10*t,2)+Math.pow(10*s,2)));(0==l.g||this.gridsList[a][c].g>h)&&(l.g=h,l.parent=e),l.h=Math.abs(i.x-a)+Math.abs(i.y-c),l.f=l.g+l.h,r.indexOf(l)<0&&r.push(l)}}}h.push(e),r.splice(r.indexOf(e),1),r.length<=0&&cc.log("find path failed."),r.sort(this._sortFunc)}},draw(t,i,s){(s=null!=s?s:cc.Color.GRAY).a=150,this.graphics.fillColor=s;let r=t*this._gridW,h=i*this._gridH;this.graphics.fillRect(r,h,this._gridW,this._gridH)}}),cc.astar=function(t,i,s){return new cc.AStar(t,i,s)},cc.AStar.Types={Obstacle:-1,Normal:0,Target:2,Start:1};